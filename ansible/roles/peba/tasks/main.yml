

---
- name: Make sure the relevant directories exist for deployment
  file: path="/opt/peba" owner=root group=root mode=0755 recurse=yes state=directory

- name: Create ews config dir
  file: path="/etc/ews/" owner=root group=root mode=0755 recurse=yes state=directory

- name: Add user peba.
  user:
    name: peba
    shell: /bin/nologin
    home: /nonexistent
    createhome: no
    system: yes
    comment: user for PEBA Backend

- name: Create Log Dir for Peba
  file:
     path: '/var/log/peba'
     owner: peba
     group: peba
     mode: 0755
     state: directory

- name: Create log file
  file:
    path: '/var/log/peba/peba.log'
    state: touch
    owner: peba
    group: peba
    mode: 0755

- name: Create error log file
  file:
    path: '/var/log/peba/peba_error.log'
    state: touch
    owner: peba
    group: peba
    mode: 0755


- name: Create Run Dir for Peba
  file:
     path: '/var/run/peba'
     owner: peba
     group: peba
     mode: 0755
     state: directory

- name: Copy scripts
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: './../../../../peba.py', dest: '/opt/peba/peba.py' }
    - { src: './../../../../putservice.py', dest: '/opt/peba/putservice.py' }
    - { src: './../../../../elastic.py', dest: '/opt/peba/elastic.py' }
    - { src: './../../../../communication.py', dest: '/opt/peba/communication.py' }
    - { src: './../../../../requirements.txt', dest: '/opt/peba/requirements.txt' }

- name: install configuration file
  template:
      src: ../roles/peba/templates/peba.cfg
      dest: '/etc/ews/peba.cfg'
      owner: root
      group: root
      mode: 0644

- name: Create maxmind geoip directory
  file: path="/var/lib/GeoIP" owner=root group=root mode=0755 recurse=yes state=directory

- name: copy software from maxmind
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: './../../../../var/lib/GeoIP/GeoLiteCity.dat', dest: '/var/lib/GeoIP/GeoLiteCity.dat' }
    - { src: './../../../../var/lib/GeoIP/GeoIP.dat', dest: '/var/lib/GeoIP/GeoIP.dat' }
    - { src: './../../../../var/lib/GeoIP/GeoIPASNum.dat', dest: '/var/lib/GeoIP/GeoIPASNum.dat' }


- name: Install peba.service Unitfile
  template:
     src: './../../../../etc/systemd/system/peba.service'
     dest: '/etc/systemd/system/peba.service'
     owner: root
     group: root
     mode: 0644


- name: Reload daemon
  shell: "systemctl daemon-reload"

- name: Install necessary packages.
  apt: name={{ item }} state=present
  with_items:
    - nano
    - wget
    - curl
    - unzip
    - python-pip
    - build-essential
    - autoconf
    - libtool
    - pkg-config
    - python-dev
    - python3-dev
    - python3-pip
    - python3-venv
    - python3-pylibmc
    - memcached

- name: Installing virtualenv via pip
  pip:
    name: virtualenv
    executable: pip3

- name: Install pip requirements
  pip:
    requirements: /opt/peba/requirements.txt
    state: latest
    executable: pip3
    #virtualenv_command: pyvenv
    #virtualenv: /opt/peba/

- name: Change Ownership to Peba
  file:
     path: /opt/peba
     owner: peba
     group: peba
     recurse: yes

- name: Start peba service
  systemd:
     name: peba.service
     enabled: yes
     state: restarted
     masked: no
     daemon_reload: yes

